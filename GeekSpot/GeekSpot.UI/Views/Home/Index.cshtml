@using System.Text.RegularExpressions
@model IndexViewModel
@{
    ViewData["Title"] = "Home Page";
}

<!-- Page Content -->
<!-- Banner Starts Here -->
<div class="main-banner header-text">
    <div class="container-fluid">
        <div class="owl-banner owl-carousel" style="padding-top: 0px">
            @foreach (var post in Model.PopularPosts)
            {
                <div class="item">
                    @{
                        var match = Regex.Match(post.Content, "<img[^>]+>");
                    }
                    @if (@match.Success)
                    {
                        @Html.Raw(match.Value.Insert(4," style='height:380px'"))
                    }
                    else
                    {
                        <img src="/assets/images/banner-item-01.jpg" style="height: 380px">
                    }
                    <div class="item-content">
                        <div class="main-content">
                            <div class="meta-category">
                                <a href="@Url.Action("PostDetails", "Blog" , new { id= post.Id })">
                                    <h4>@post.Title</h4>
                                </a>
                            </div>
                            <ul class="post-info">
                                <li><a href="#">@($"{@post.Author.Name} {@post.Author.Surname}")</a></li>
                                <li><a href="#">@post.PublishedOn?.ToString("MMM dd, yyyy")</a></li>
                                <li><a id="post-views-@post.Id" href="#">@($"{post.ReadCount} Views")</a></li>
                                <li><a style="color:#f48840" href="#">Popular Post</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<section class="blog-posts">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <div class="all-blog-posts">
                    <div class="row">
                        @foreach (var post in Model.Posts)
                        {
                            <div class="col-lg-12">
                                <div class="blog-post">
                                    <div class="blog-thumb">
                                        <img src="/assets/images/post-top-decorator.jpg" alt="">
                                    </div>
                                    <div class="down-content">
                                        <a href="@Url.Action("PostDetails", "Blog" , new { id= post.Id })">
                                            <span>@post.Title</span>
                                        </a>
                                        <ul class="post-info">
                                            <li><a href="#">@($"{@post.Author.Name} {@post.Author.Surname}")</a></li>
                                            <li><a href="#">@post.PublishedOn?.ToString("MMM dd, yyyy") </a></li>
                                            <li><a id="post-views-@post.Id" href="#">@($"{post.ReadCount} Views")</a></li>
                                        </ul>
                                        <hr />
                                        <p>
                                            @Html.Raw(post.Content)
                                        </p>
                                        <hr />
                                        <div class="post-options">
                                            <div class="row">
                                                <div class="col-6">
                                                    <ul class="post-tags">
                                                        <li><i class="fa fa-tags"></i></li>
                                                        @foreach (var tag in post.Tags)
                                                        {
                                                            <li><a href="@Url.Action("GetPostsByTag", "Home" , new { name = tag.Name })">@tag.Name</a>,</li>
                                                        }
                                                    </ul>
                                                </div>
                                                <div class="col-6">
                                                    <ul class="post-share">
                                                        <li><i class="fa fa-share-alt"></i></li>
                                                        <li><a href="#">Facebook</a>,</li>
                                                        <li><a href="#"> Twitter</a></li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="sidebar">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="sidebar-item search">
                                <form id="search_form" name="gs" method="GET" action="#">
                                    <input type="text" id="postSearch" name="Title" class="searchText" placeholder="type to search...">
                                </form>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="sidebar-item recent-posts">
                                <div class="sidebar-heading">
                                    <h2>Recent Posts</h2>
                                </div>
                                <div class="content" id="recent-posts-component">
                                    @(await Component.InvokeAsync("RecentPosts"))
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            @(await Component.InvokeAsync("TagCloud"))
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</section>



@section Scripts {
    <script src="~/js/notification.js"></script>
}